# ビルドステージ
FROM node:20.12.2-buster as build

# 作業ディレクトリを設定
WORKDIR /usr/src/app

# package.jsonとpackage-lock.jsonをコピー
COPY ../../source/app/package*.json ./

# 依存関係をインストール
RUN npm install

# アプリケーションのソースコードをコピー
COPY ../../source/app .

# アプリケーションをビルド
RUN npm run build

# 実行ステージ
FROM nginx:1.25.5-alpine3.19

# タイムゾーン設定
RUN apk update \
    && apk add --no-cache tzdata \
    && cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

# 言語設定
ENV LANG=ja_JP.UTF-8 \
    LC_CTYPE=ja_JP.UTF-8 \
    LC_NUMERIC=ja_JP.UTF-8 \
    LC_TIME=ja_JP.UTF-8 \
    LC_COLLATE=ja_JP.UTF-8 \
    LC_MONETARY=ja_JP.UTF-8 \
    LC_MESSAGES=ja_JP.UTF-8 \
    LC_PAPER=ja_JP.UTF-8 \
    LC_NAME=ja_JP.UTF-8 \
    LC_ADDRESS=ja_JP.UTF-8 \
    LC_TELEPHONE=ja_JP.UTF-8 \
    LC_MEASUREMENT=ja_JP.UTF-8 \
    LC_IDENTIFICATION=ja_JP.UTF-8 \
    LC_ALL=

# Nginx設定ファイルをコピー
COPY ./docker/web/default.prod.conf /etc/nginx/conf.d/default.conf

# ビルドしたアプリケーションをコピー
COPY --from=build /usr/src/app/dist /usr/share/nginx/html

# Nginxをフォアグラウンドで実行
CMD ["nginx", "-g", "daemon off;"]
